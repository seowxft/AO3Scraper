ageNums
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect
ageNums
ageVector
age.na$Freq
age.na<-age.sum[age.sum$Age=="Select Age",]
age.na
age.na
is.na(age.na)
is.null(age.na)
nrow(age.na)==0
age.un18
age.un18
age.na
age.na  age.na$Age<-c("Select Age")
age.na$Freq<-0
age.na
age.na$Age<-c("Select Age")
c("Select Age", 0)
rbind(age.na, c("Select Age", 0))
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
age.na
#If specify which day
demographics.sub=demographics[demographics$dayNum==2,]
age.sum<-as.data.frame(table(demographics.sub$age))
colnames(age.sum)<-c("Age","Freq")
#Bin the ages
# Select Age
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
# Under 18
age.un18<-age.sum[age.sum$Age=="Under 18",]
if(nrow(age.un18)==0){
age.un18<-rbind(age.un18, c("Under 18", 0))
colnames(age.un18)<-c("Age","Freq")}
# 18-30
age.num<- age.sum[age.sum$Age!= "Select Age" & age.sum$Age!="Under 18",]
age.num$Age<- as.numeric(as.character(age.num$Age))
age.18t30<-age.num[age.num$Age<=30,]
# 31-50
age.31t50<-age.num[age.num$Age>30 & age.num$Age<=50 ,]
# 51-70
age.51t70<-age.num[age.num$Age>50 & age.num$Age<=70 ,]
# 71-90
age.71t90<-age.num[age.num$Age>70 & age.num$Age<=90 ,]
# Above 90
age.t90<-age.num[age.num$Age>90,]
ageVector<-c("N/A", "Under 18","18-30","31-50","51-70","71-90","Above 90")
ageNums<- c(age.na$Freq,age.un18$Freq,sum(age.18t30$Freq),sum(age.31t50$Freq),sum(age.51t70$Freq),sum(age.71t90$Freq),sum(age.t90$Freq))
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
age.plot
age.Vect
age.Vect$Age
age.Vect$Freq
as.numeric(age.Vect$Freq)
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect$Freq<-as.numeric(age.Vect$Freq)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
age.plot
# Age plot
#If specify which day
demographics.sub=demographics[demographics$dayNum==3,]
age.sum<-as.data.frame(table(demographics.sub$age))
colnames(age.sum)<-c("Age","Freq")
#Bin the ages
# Select Age
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
# Under 18
age.un18<-age.sum[age.sum$Age=="Under 18",]
if(nrow(age.un18)==0){
age.un18<-rbind(age.un18, c("Under 18", 0))
colnames(age.un18)<-c("Age","Freq")}
# 18-30
age.num<- age.sum[age.sum$Age!= "Select Age" & age.sum$Age!="Under 18",]
age.num$Age<- as.numeric(as.character(age.num$Age))
age.18t30<-age.num[age.num$Age<=30,]
# 31-50
age.31t50<-age.num[age.num$Age>30 & age.num$Age<=50 ,]
# 51-70
age.51t70<-age.num[age.num$Age>50 & age.num$Age<=70 ,]
# 71-90
age.71t90<-age.num[age.num$Age>70 & age.num$Age<=90 ,]
# Above 90
age.t90<-age.num[age.num$Age>90,]
ageVector<-c("N/A", "Under 18","18-30","31-50","51-70","71-90","Above 90")
ageNums<- c(age.na$Freq,age.un18$Freq,sum(age.18t30$Freq),sum(age.31t50$Freq),sum(age.51t70$Freq),sum(age.71t90$Freq),sum(age.t90$Freq))
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect$Freq<-as.numeric(age.Vect$Freq)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
age.plot
age.Vect
sum(signups.sum$Freq)
###############################################
## Neureka Questionniare Analysis Script ######
## Wraoper for risk factor challenge     ######
###############################################
# 2020
# clear all
rm(list=ls())
options(scipen=999)
memory.limit()
# Packages
library(ggplot2)
library(forcats)
library(dplyr)
library(scales)
#library(ggpubr)
library(DescTools)
dataPath = 'C:/Users/dream/Google Drive/Neureka'
# ----------------------------------------------------------------------------------------------#
# read in user data
# choose which server to examine: test server = 0 ; live server = 1
server = 1
# 15-05-2020: Ver 1.0.1
# 20-05-2020: Ver 1.0.?
# 02-06-2020
# timeRestrict: yyyy/mm/dd/hh/mm/ss
timeRestrict = 20200600000000
if (server == 1) {
userList<- read.csv(url("https://neureka-web-server.herokuapp.com/auth/user"), header = TRUE)} else {
userList<- read.csv(url("https://aqueous-taiga-91422.herokuapp.com/auth/user"), header = TRUE)}
# filter out UIDs which were only there for testing purposes
demographics = data.frame(userList$UniqueID, userList$Age, userList$Gender, userList$Employment, userList$Education, userList$ColourBlind, userList$Country,userList$FirstLanguage,userList$RiskFactorCompletionCount,userList$TimeStamp)
colnames(demographics)<-c("PlayerID","age","gender","employment","education","colourblind","country","language","riskfaccomp","timestamp")
# 20th May 2020 NOTE: riskfaccomp data column is not working right. Eoghan will fix this when he fixes the data sync.
# fliter out duplicates
demographics <- unique( demographics[ , 1:length(demographics) ] )
grp <- with(demographics, cumsum(c(TRUE,PlayerID[-1L]!=PlayerID[-length(PlayerID)])))
demographics$Count <- ave(seq_along(demographics$PlayerID), grp, FUN=seq_along)
userList
head(userList)
# ----------------------------------------------------------------------------------------------#
# Sign ups by date plot
# recode the timestamp column into numeric
demographics$timeValue <- as.numeric( gsub("_", "", as.character(demographics$timestamp)) )
### IM EXCLUDING THE OLD DATA VIA TIEMSTAMP
demographicsTemp<- demographics[demographics$timeValue > timeRestrict,]
demographicsTemp$day<-RoundTo(demographicsTemp$timeValue , 1000000, floor)
demographics<-na.omit(demographicsTemp)
demographics<-demographics[demographics$Count==1,]
demographics$dayNum<- as.numeric(factor(demographics$day))
signups.sum<-as.data.frame(table(demographics$dayNum))
colnames(signups.sum)<-c("Day", "Freq")
signups.sum$Day<-factor(signups.sum$Day, ordered = TRUE, levels=signups.sum$Day)
signups.plot<- signups.sum  %>%
ggplot( aes(x=Day, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+ #coord_flip() +
labs(subtitle="Sign Ups since 1st June 2020") +
theme_bw() +   theme(text = element_text(size=15))
signups.plot
# ----------------------------------------------------------------------------------------------#
# Country plot
country.sum<-as.data.frame(table(demographics$country))
colnames(country.sum)<-c("Country","Freq")
country.sum<-country.sum[  with(country.sum, order(-country.sum$Freq, country.sum$Country)), ]
# Reorder following the value of another column:
country.plot<-country.sum %>% mutate(Country = fct_reorder(Country, Freq)) %>%
ggplot(aes(x=Freq, y=Country,label=Freq)) +
geom_point(stat='identity', fill="black", size=7)  +  geom_text(color="white", size=3)+
labs(title="Neureka Sign Ups", subtitle= "From 01 June 2020") +
theme_bw() +   theme(text = element_text(size=15))
country.plot
----------------------------------------------------#
# Age plot
#If specify which day
#demographics.sub=demographics[demographics$dayNum==3,]
#If total
demographics.sub=demographics
age.sum<-as.data.frame(table(demographics.sub$age))
colnames(age.sum)<-c("Age","Freq")
#Bin the ages
# Select Age
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
# Under 18
age.un18<-age.sum[age.sum$Age=="Under 18",]
if(nrow(age.un18)==0){
age.un18<-rbind(age.un18, c("Under 18", 0))
colnames(age.un18)<-c("Age","Freq")}
# 18-30
age.num<- age.sum[age.sum$Age!= "Select Age" & age.sum$Age!="Under 18",]
age.num$Age<- as.numeric(as.character(age.num$Age))
age.18t30<-age.num[age.num$Age<=30,]
# 31-50
age.31t50<-age.num[age.num$Age>30 & age.num$Age<=50 ,]
# 51-70
age.51t70<-age.num[age.num$Age>50 & age.num$Age<=70 ,]
# 71-90
age.71t90<-age.num[age.num$Age>70 & age.num$Age<=90 ,]
# Above 90
age.t90<-age.num[age.num$Age>90,]
ageVector<-c("N/A", "Under 18","18-30","31-50","51-70","71-90","Above 90")
ageNums<- c(age.na$Freq,age.un18$Freq,sum(age.18t30$Freq),sum(age.31t50$Freq),sum(age.51t70$Freq),sum(age.71t90$Freq),sum(age.t90$Freq))
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect$Freq<-as.numeric(age.Vect$Freq)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
# ----------------------------------------------------------------------------------------------#
# Age plot
#If specify which day
#demographics.sub=demographics[demographics$dayNum==3,]
#If total
demographics.sub=demographics
age.sum<-as.data.frame(table(demographics.sub$age))
colnames(age.sum)<-c("Age","Freq")
#Bin the ages
# Select Age
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
# Under 18
age.un18<-age.sum[age.sum$Age=="Under 18",]
if(nrow(age.un18)==0){
age.un18<-rbind(age.un18, c("Under 18", 0))
colnames(age.un18)<-c("Age","Freq")}
# 18-30
age.num<- age.sum[age.sum$Age!= "Select Age" & age.sum$Age!="Under 18",]
age.num$Age<- as.numeric(as.character(age.num$Age))
age.18t30<-age.num[age.num$Age<=30,]
# 31-50
age.31t50<-age.num[age.num$Age>30 & age.num$Age<=50 ,]
# 51-70
age.51t70<-age.num[age.num$Age>50 & age.num$Age<=70 ,]
# 71-90
age.71t90<-age.num[age.num$Age>70 & age.num$Age<=90 ,]
# Above 90
age.t90<-age.num[age.num$Age>90,]
ageVector<-c("N/A", "Under 18","18-30","31-50","51-70","71-90","Above 90")
ageNums<- c(age.na$Freq,age.un18$Freq,sum(age.18t30$Freq),sum(age.31t50$Freq),sum(age.51t70$Freq),sum(age.71t90$Freq),sum(age.t90$Freq))
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect$Freq<-as.numeric(age.Vect$Freq)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
age.plot
# ----------------------------------------------------------------------------------------------#
# Age plot
#If specify which day
demographics.sub=demographics[demographics$dayNum==4,]
#If total
#demographics.sub=demographics
age.sum<-as.data.frame(table(demographics.sub$age))
colnames(age.sum)<-c("Age","Freq")
#Bin the ages
# Select Age
age.na<-age.sum[age.sum$Age=="Select Age",]
if(nrow(age.na)==0){
age.na<-rbind(age.na, c("Select Age", 0))
colnames(age.na)<-c("Age","Freq")
}
# Under 18
age.un18<-age.sum[age.sum$Age=="Under 18",]
if(nrow(age.un18)==0){
age.un18<-rbind(age.un18, c("Under 18", 0))
colnames(age.un18)<-c("Age","Freq")}
# 18-30
age.num<- age.sum[age.sum$Age!= "Select Age" & age.sum$Age!="Under 18",]
age.num$Age<- as.numeric(as.character(age.num$Age))
age.18t30<-age.num[age.num$Age<=30,]
# 31-50
age.31t50<-age.num[age.num$Age>30 & age.num$Age<=50 ,]
# 51-70
age.51t70<-age.num[age.num$Age>50 & age.num$Age<=70 ,]
# 71-90
age.71t90<-age.num[age.num$Age>70 & age.num$Age<=90 ,]
# Above 90
age.t90<-age.num[age.num$Age>90,]
ageVector<-c("N/A", "Under 18","18-30","31-50","51-70","71-90","Above 90")
ageNums<- c(age.na$Freq,age.un18$Freq,sum(age.18t30$Freq),sum(age.31t50$Freq),sum(age.51t70$Freq),sum(age.71t90$Freq),sum(age.t90$Freq))
age.Vect<-data.frame("Age" = ageVector, "Freq" = ageNums)
age.Vect$Age<-factor(age.Vect$Age, ordered = TRUE, levels=age.Vect$Age)
age.Vect$Freq<-as.numeric(age.Vect$Freq)
age.plot<- age.Vect  %>%
ggplot( aes(x=Age, y=Freq, label = Freq)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
geom_text(color="black", size=5)+coord_flip() +
labs(subtitle="Age Range") +
theme_bw() +   theme(text = element_text(size=15))
age.plot
# ----------------------------------------------------------------------------------------------#
# Gender plot
gender.sum<-as.data.frame(table(demographics$gender))
colnames(gender.sum)<-c("Gender", "Freq")
gender.sum$Percent<- gender.sum$Freq/nrow(gender.sum)
gender.plot<-ggplot(gender.sum, aes(x="", y=Freq, fill=Gender ))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start=0)+ scale_fill_brewer(palette="Set1")+
theme_minimal()+
theme(    axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")  )+
theme(axis.text.x=element_blank())+
geom_text(aes(label = paste(round(Freq / sum(Freq) * 100, 1), "%")),
position = position_stack(vjust = 0.5), size=5)+
labs(subtitle="Gender Spread") +  theme(text = element_text(size=15))
gender.plot
install.packages("tidyverse")
install.packages("tokenizers")
library(tidyverse)
library(tokenizers)
# --------------------------------------------------------------------------->
# Archive of Our Own: Nirvana in Fire (TV) Fanwork Meta-data Stats Analysis
# Scraped: 8 June 2020
# © Seow 2020
# clear all
rm(list = ls())
#####
# libaries
##### -------------------------------------------------------------> #####
library(tidyverse)
library(DescTools)
library(ggplot2)
#####
# load data
##### -------------------------------------------------------------> #####
path = 'C:/Users/dream/Documents/GitHub/AO3Scraper-master-ori'
setwd(path)
metaData.e<-read.csv('nif_metaData.csv')
#####
# manual exclusions
##### -------------------------------------------------------------> #####
# Chinese fanwork mislabelled as English
exclud1 <- c('9377837', '9348611', '9250082', '7298401', '11375991' ,'11375886' ,'11375856' ,'11375799','12710559','11510832','23839219')
# Unrelated drabble collection
exclud2 <- c('602170','13595709','18125552')
# MDZS fanworks with no NIF connection
exclud3 <- c('20459813','16087568')
# Naruto fanwork that is not a crossover
exclud4 <- c('11366736')
exclud<-c(exclud1,exclud2,exclud3,exclud4)
metaData<-metaData.e[!metaData.e$work_id %in% exclud,]
# load data
##### -------------------------------------------------------------> #####
path = 'C:/Users/dream/Documents/GitHub/NiFAO3Scrape'
setwd(path)
metaData.e<-read.csv('nif_metaData.csv')
authorData.e<-read.csv('nif_metaData_all.csv')
head(authorData.e)
authorData<-read.csv('nif_metaData_all.csv')
exclud<-c(exclud1,exclud2,exclud3,exclud4)
metaData.t<-metaData.e[!metaData.e$work_id %in% exclud,]
head(metaData.t)
colnames(authorData)<- c("work_id,","author","title_check")
metaData<- merge(authorData, metaData.t, by = "work_id")
head(authorData)
colnames(authorData)<- c("work_id","author","title_check")
metaData<- merge(authorData, metaData.t, by = "work_id")
colnames(authorData)<- c("work_id","author","title_check")
metaData<- merge(authorData, metaData.t, by = "work_id")
metaData
head(metaData)
author.freq<-as.data.frame(table(metaData$author))
colnames(author.freq)<-c("author", "Freq")
author.freq
head(author.freq)
author.freq<-author.freq[with(author.freq, order(author.freq$Freq)),  ]
author.freq
author.freq<-author.freq[with(author.freq, order(-author.freq$Freq)),  ]
author.freq
head(author.freq)
author.freq[1:10,]
879-632
247-238
authorData2<-read.csv('nif_metaData_all2-edit.csv')
authorData2
substr(authorData2$author,4)
nchar(authorData2$author)
substr(authorData2$author, nchar(authorData2$author)-2)
substr(authorData2$author, nchar(authorData2$author))
substr(authorData2$author, 4, nchar(authorData2$author))
substr(authorData2$author, 4, nchar(authorData2$author)-2)
authorData2$author = substr(authorData2$author, 4, nchar(authorData2$author))
rbind(authorData,authorData2)
cbind(authorData,authorData2)
head(authorData)
head(authorData2)
authorData2$author = substr(authorData2$author, 4, nchar(authorData2$author)-2)
colnames(authorData2)<- c("work_id","author","title_check")
rbind(authorData,authorData2)
temp<-rbind(authorData,authorData2)
unique(temp$work_id)
length(unique(temp$work_id))
temp
temp<-temp[with(temp, order(-temp$author)),  ]
temp
temp<-temp[with(temp, order(-temp$work_id)),  ]
temp
authorData2<-read.csv('nif_metaData_all2-edit.csv')
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
authorData2$author = substr(authorData2$author, 4, nchar(authorData2$author)-2)
colnames(authorData2)<- c("work_id","author","title_check")
temp<-rbind(authorData,authorData2)
authorData2<-read.csv('nif_metaData_all2-edit.csv')
authorData2$author = substr(authorData2$author, 4, nchar(authorData2$author)-2)
colnames(authorData2)<- c("work_id","author","title_check")
temp<-rbind(authorData,authorData2)
length(unique(temp$work_id))
temp<-temp[with(temp, order(-temp$work_id)),  ]
authorData2<-read.csv('nif_metaData_all2-edit.csv')
authorData2$author = substr(authorData2$author, 4, nchar(authorData2$author)-2)
colnames(authorData2)<- c("work_id","author","title_check")
temp<-rbind(authorData,authorData2)
length(unique(temp$work_id))
temp<-temp[with(temp, order(-temp$work_id)),  ]
temp
temp[!duplicated(temp),]
left<-temp[!duplicated(temp),]
left
write.csv(left,'nif_metaData_author-final.csv', row.names=FALSE)
# --------------------------------------------------------------------------->
# Archive of Our Own: Nirvana in Fire (TV) Fanwork Meta-data Stats Analysis
# Scraped: 8 June 2020
# © Seow 2020
# clear all
rm(list = ls())
#####
# libaries
##### -------------------------------------------------------------> #####
library(tidyverse)
library(DescTools)
library(ggplot2)
#####
# load data
##### -------------------------------------------------------------> #####
path = 'C:/Users/dream/Documents/GitHub/NiFAO3Scrape'
setwd(path)
metaData.e<-read.csv('nif_metaData.csv')
authorData<-read.csv('nif_metaData_author-final.csv')
# manual exclusions
##### -------------------------------------------------------------> #####
# Chinese fanwork mislabelled as English
exclud1 <- c('9377837', '9348611', '9250082', '7298401', '11375991' ,'11375886' ,'11375856' ,'11375799','12710559','11510832','23839219')
# Unrelated drabble collection
exclud2 <- c('602170','13595709','18125552')
# MDZS fanworks with no NIF connection
exclud3 <- c('20459813','16087568')
# Naruto fanwork that is not a crossover
exclud4 <- c('11366736')
exclud<-c(exclud1,exclud2,exclud3,exclud4)
metaData.t<-metaData.e[!metaData.e$work_id %in% exclud,]
#####
# merge author data
##### -------------------------------------------------------------> #####
colnames(authorData)<- c("work_id","author","title_check")
metaData<- merge(authorData, metaData.t, by = "work_id")
author.freq<-as.data.frame(table(metaData$author))
colnames(author.freq)<-c("author", "Freq")
author.freq<-author.freq[with(author.freq, order(-author.freq$Freq)),  ]
author.freq[1:10,]
left<-metaData[!metaData$work_id %in% authorData$work_id,]
left
etaData$work_id
metaData$work_id
left<-metaData.t[!metaData.t$work_id %in% authorData$work_id,]
left
write.csv(left,'left_to_scrape.csv',row.names=FALSE)
metaData
head(metaData)
author.freq
metaData[metaData$work_id==11239125,]
